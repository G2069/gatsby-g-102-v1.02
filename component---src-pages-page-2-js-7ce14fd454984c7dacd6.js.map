{"version":3,"file":"component---src-pages-page-2-js-7ce14fd454984c7dacd6.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/Three/Second.js","webpack://gatsby-starter-default/./src/Three/Overlay.js","webpack://gatsby-starter-default/./node_modules/three-stdlib/loaders/RGBELoader.js","webpack://gatsby-starter-default/./node_modules/@react-three/drei/helpers/environment-assets.js","webpack://gatsby-starter-default/./node_modules/@react-three/drei/core/Environment.js","webpack://gatsby-starter-default/./src/Three/Show.js","webpack://gatsby-starter-default/./src/pages/page-2.js"],"sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from \"three\"\nimport React, { useRef, useEffect } from \"react\"\nimport {\n  useGLTF,\n  PerspectiveCamera,\n  useAnimations\n} from \"@react-three/drei\"\nimport { useFrame } from \"@react-three/fiber\"\n\nexport default function Model({ scroll, ...props }) {\n  const group = useRef()\n  const { nodes, materials, animations } = useGLTF(\"/final-scene.glb\")\n  const { actions } = useAnimations(animations, group)\n  useEffect(() => void (actions[\"CameraAction\"].play().paused = true), [])\n  useFrame(state => {\n    actions[\"CameraAction\"].time = THREE.MathUtils.lerp(\n      actions[\"CameraAction\"].time,\n      actions[\"CameraAction\"].getClip().duration * scroll.current,\n      0.05\n    )\n  })\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group\n        name=\"Camera\"\n        position={[0.96, 55.97, 132.61]}\n        rotation={[1.57, 0, -0.01]}\n      >\n        <PerspectiveCamera\n          makeDefault\n          far={1000}\n          near={0.1}\n          fov={22.9}\n          rotation={[-Math.PI / 2, 0, 0]}\n        />\n      </group>\n      <mesh geometry={nodes.shirt.geometry} material={nodes.shirt.material} />\n      <mesh geometry={nodes.belt.geometry} material={nodes.belt.material} />\n      <mesh geometry={nodes.body.geometry} material={nodes.body.material} />\n      <mesh\n        geometry={nodes.Cylinder002.geometry}\n        material={materials[\"yellow emission\"]}\n      />\n      <mesh\n        geometry={nodes.Cylinder002_1.geometry}\n        material={nodes.Cylinder002_1.material}\n      />\n      <mesh\n        geometry={nodes.sharingan_button.geometry}\n        material={nodes.sharingan_button.material}\n      />\n      <mesh\n        geometry={nodes.body001.geometry}\n        material={nodes.body001.material}\n      />\n      <mesh\n        geometry={nodes.body002.geometry}\n        material={nodes.body002.material}\n      />\n      <mesh\n        geometry={nodes.body003.geometry}\n        material={nodes.body003.material}\n      />\n      <mesh\n        geometry={nodes.between_chest.geometry}\n        material={materials[\"chest-cf\"]}\n      />\n      <mesh geometry={nodes.chest.geometry} material={nodes.chest.material} />\n      <mesh\n        geometry={nodes.Plane003.geometry}\n        material={materials[\"side-cf\"]}\n      />\n      <mesh\n        geometry={nodes.shoulder_.geometry}\n        material={nodes.shoulder_.material}\n      />\n      <mesh\n        geometry={nodes.shoulder_001.geometry}\n        material={nodes.shoulder_001.material}\n      />\n      <mesh\n        geometry={nodes.shoulder_002.geometry}\n        material={nodes.shoulder_002.material}\n      />\n      <mesh\n        geometry={nodes.shoulder_003.geometry}\n        material={nodes.shoulder_003.material}\n      />\n      <mesh\n        geometry={nodes.NurbsPath035.geometry}\n        material={nodes.NurbsPath035.material}\n      />\n      <mesh\n        geometry={nodes.NurbsPath035_1.geometry}\n        material={nodes.NurbsPath035_1.material}\n      />\n      <mesh\n        geometry={nodes.cable002.geometry}\n        material={materials[\"cable-cf\"]}\n      />\n      <mesh\n        geometry={nodes.butt_stripe1.geometry}\n        material={materials[\"butt-stripe-cf\"]}\n      />\n      <mesh\n        geometry={nodes.knee_guard003.geometry}\n        material={materials[\"leg-guard-cf\"]}\n      />\n      <mesh\n        geometry={nodes.Cube001.geometry}\n        material={materials[\"Material.003\"]}\n      />\n      <mesh geometry={nodes.Cube001_1.geometry} material={materials.glass} />\n      <mesh\n        geometry={nodes.Cube001_2.geometry}\n        material={materials[\"silver.001\"]}\n      />\n      <mesh\n        geometry={nodes.new_helmet002.geometry}\n        material={nodes.new_helmet002.material}\n      />\n      <mesh\n        geometry={nodes.new_helmet003.geometry}\n        material={nodes.new_helmet003.material}\n      />\n      <mesh\n        geometry={nodes.new_helmet004.geometry}\n        material={nodes.new_helmet004.material}\n      />\n      <mesh\n        geometry={nodes.knife001.geometry}\n        material={materials.emarald}\n        position={[144.12, 47.85, 0]}\n        rotation={[-3, -1.48, -1.43]}\n        scale={[0.86, 3.37, 0.73]}\n      />\n      <mesh\n        geometry={nodes.Cube.geometry}\n        material={nodes.Cube.material}\n        position={[144.12, 47.85, 0]}\n        rotation={[Math.PI, -1.48, Math.PI]}\n        scale={0.96}\n      />\n      <mesh\n        geometry={nodes.eye.geometry}\n        material={materials[\"Material.004\"]}\n        position={[144.12, 47.85, 0]}\n        rotation={[-1.55, 0.17, -1.66]}\n        scale={[0.8, 0.78, 1.31]}\n      />\n      <mesh\n        geometry={nodes.handle.geometry}\n        material={materials.metal}\n        position={[144.12, 47.85, 0]}\n        rotation={[0, -0.97, 0]}\n        scale={0.96}\n      />\n      <mesh\n        geometry={nodes.head.geometry}\n        material={nodes.head.material}\n        position={[144.12, 47.85, 0]}\n        rotation={[-1.55, 0.17, -1.66]}\n        scale={[0.8, 0.78, 1.31]}\n      />\n      <mesh\n        geometry={nodes.tooth.geometry}\n        material={nodes.tooth.material}\n        position={[144.12, 47.85, 0]}\n        rotation={[3.04, -1.48, 3.04]}\n        scale={[1.54, 0.96, 0.96]}\n      />\n      <mesh\n        geometry={nodes.Torus.geometry}\n        material={nodes.Torus.material}\n        position={[144.12, 47.85, 0]}\n        rotation={[Math.PI, -1.48, Math.PI]}\n        scale={0.78}\n      />\n      <mesh\n        geometry={nodes.forearm.geometry}\n        material={nodes.forearm.material}\n      />\n      <mesh geometry={nodes.shoe.geometry} material={nodes.shoe.material} />\n      <mesh\n        geometry={nodes.Plane014.geometry}\n        material={materials[\"shoe-button-emmit\"]}\n      />\n      <mesh\n        geometry={nodes.Plane014_1.geometry}\n        material={materials[\"shoe-button-emmit\"]}\n      />\n      <mesh\n        geometry={nodes.shoe004.geometry}\n        material={nodes.shoe004.material}\n      />\n      <mesh\n        geometry={nodes.shoe006.geometry}\n        material={nodes.shoe006.material}\n      />\n      <mesh\n        geometry={nodes.shoe002.geometry}\n        material={nodes.shoe002.material}\n      />\n      <mesh\n        geometry={nodes.shoe003.geometry}\n        material={nodes.shoe003.material}\n      />\n      <mesh\n        geometry={nodes.shoe005.geometry}\n        material={nodes.shoe005.material}\n      />\n      <mesh\n        geometry={nodes.shoe007.geometry}\n        material={nodes.shoe007.material}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload(\"/final-scene.glb\")\n","import React, { forwardRef } from \"react\"\r\n\r\nconst Overlay = forwardRef(({ caption, scroll }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    onScroll={e => {\r\n      scroll.current =\r\n        e.target.scrollTop / (e.target.scrollHeight - window.innerHeight)\r\n      caption.current.innerText = scroll.current.toFixed(2)\r\n    }}\r\n    class=\"scroll\"\r\n  >\r\n    <div style={{ height: \"400vh\" }}>\r\n      <div class=\"dot\">\r\n        <h1>Intro to </h1> \r\n        <h1>G-102</h1>\r\n        In G-102, \r\n      </div>\r\n    </div>\r\n    <div style={{ height: \"200vh\" }}>\r\n      <div class=\"dot\">\r\n        <h1>headphone</h1>\r\n        Headphones are a pair of small loudspeaker drivers worn on or around the\r\n        head over a user's ears.\r\n      </div>\r\n    </div>\r\n    <div style={{ height: \"200vh\" }}>\r\n      <div class=\"dot\">\r\n        <h1>rocket</h1>A rocket (from Italian: rocchetto,\r\n        lit. 'bobbin/spool')[nb 1][1] is a projectile that spacecraft, aircraft\r\n        or other vehicle use to obtain thrust from a rocket engine.\r\n      </div>\r\n    </div>\r\n    <div style={{ height: \"200vh\" }}>\r\n      <div class=\"dot\">\r\n        <h1>turbine</h1>A turbine (/ˈtɜːrbaɪn/ or /ˈtɜːrbɪn/) (from the Greek\r\n        τύρβη, tyrbē, or Latin turbo, meaning vortex)[1][2] is a rotary\r\n        mechanical device that extracts energy from a fluid flow and converts it\r\n        into useful work.\r\n      </div>\r\n    </div>\r\n    <div style={{ height: \"200vh\" }}>\r\n      <div class=\"dot\">\r\n        <h1>table</h1>A table is an item of furniture with a flat top and one or\r\n        more legs, used as a surface for working at, eating from or on which to\r\n        place things.[1][2]\r\n      </div>\r\n    </div>\r\n    <div style={{ height: \"200vh\" }}>\r\n      <div class=\"dot\">\r\n        <h1>NFT</h1>A laptop, laptop computer, or notebook computer is a small,\r\n        portable personal computer (PC) with a screen and alphanumeric keyboard.\r\n      </div>\r\n    </div>\r\n    <div style={{ height: \"200vh\" }}>\r\n      <div class=\"dot\">\r\n        <h1>Roadmap</h1>\r\n        <p>\r\n          <div class=\"timeline\">\r\n            <div class=\"container right\">\r\n              <div class=\"content\">\r\n                <p>Q4 2021</p>\r\n                <li>Launch of official website</li>\r\n                <li>Release of game trailer</li>\r\n                <li>Presale and IDO</li>\r\n                <li>Contract Auditing</li>\r\n              </div>\r\n            </div>\r\n            <div class=\"container right\">\r\n              <div class=\"content\">\r\n                <p>Q1 2022</p>\r\n                <li>Land and NFT sale</li>\r\n                <li>Private alpha and beta test</li>\r\n                <li>Release of Farm and PVE mode</li>\r\n                <li>Public beta test</li>\r\n                <li>Staking</li>\r\n              </div>\r\n            </div>\r\n            <div class=\"container right\">\r\n              <div class=\"content\">\r\n                <p>Q2 2022</p>\r\n                <li>End of Beta Testing</li>\r\n                <li>PVP mode</li>\r\n                <li>Betting system</li>\r\n                <li>Launch mobile app</li>\r\n                <li>Intensive marketing</li>\r\n              </div>\r\n            </div>\r\n            <div class=\"container right\">\r\n              <div class=\"content\">\r\n                <p>Q3 2022</p>\r\n                <li>Seasonal tournament</li>\r\n                <li>New Season Character</li>\r\n                <li>Launch team PVP mode</li>\r\n                <li>Development of AR and VR</li>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <span class=\"caption\" ref={caption}>\r\n      0.00\r\n    </span>\r\n  </div>\r\n))\r\n\r\nexport default Overlay\r\n","import _classCallCheck from \"C:/Users/kalvi/Desktop/NFT website/g-102-v1.02/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/kalvi/Desktop/NFT website/g-102-v1.02/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/kalvi/Desktop/NFT website/g-102-v1.02/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/kalvi/Desktop/NFT website/g-102-v1.02/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/kalvi/Desktop/NFT website/g-102-v1.02/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/kalvi/Desktop/NFT website/g-102-v1.02/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { DataTextureLoader, UnsignedByteType, HalfFloatType, FloatType, DataUtils, RGBFormat, RGBEFormat, LinearEncoding, LinearFilter, RGBEEncoding, NearestFilter } from 'three'; // http://en.wikipedia.org/wiki/RGBE_image_format\n\nvar RGBELoader = /*#__PURE__*/function (_DataTextureLoader) {\n  _inherits(RGBELoader, _DataTextureLoader);\n\n  var _super = _createSuper(RGBELoader);\n\n  function RGBELoader(manager) {\n    var _this;\n\n    _classCallCheck(this, RGBELoader);\n\n    _this = _super.call(this, manager);\n    _this.type = UnsignedByteType;\n    return _this;\n  } // adapted from http://www.graphics.cornell.edu/~bjw/rgbe.html\n\n\n  _createClass(RGBELoader, [{\n    key: \"parse\",\n    value: function parse(buffer) {\n      var\n      /* return codes for rgbe routines */\n      //RGBE_RETURN_SUCCESS = 0,\n      RGBE_RETURN_FAILURE = -1,\n\n      /* default error routine.  change this to change error handling */\n      rgbe_read_error = 1,\n          rgbe_write_error = 2,\n          rgbe_format_error = 3,\n          rgbe_memory_error = 4,\n          rgbe_error = function rgbe_error(rgbe_error_code, msg) {\n        switch (rgbe_error_code) {\n          case rgbe_read_error:\n            console.error('THREE.RGBELoader Read Error: ' + (msg || ''));\n            break;\n\n          case rgbe_write_error:\n            console.error('THREE.RGBELoader Write Error: ' + (msg || ''));\n            break;\n\n          case rgbe_format_error:\n            console.error('THREE.RGBELoader Bad File Format: ' + (msg || ''));\n            break;\n\n          default:\n          case rgbe_memory_error:\n            console.error('THREE.RGBELoader: Error: ' + (msg || ''));\n        }\n\n        return RGBE_RETURN_FAILURE;\n      },\n\n      /* offsets to red, green, and blue components in a data (float) pixel */\n      //RGBE_DATA_RED = 0,\n      //RGBE_DATA_GREEN = 1,\n      //RGBE_DATA_BLUE = 2,\n\n      /* number of floats per pixel, use 4 since stored in rgba image format */\n      //RGBE_DATA_SIZE = 4,\n\n      /* flags indicating which fields in an rgbe_header_info are valid */\n      RGBE_VALID_PROGRAMTYPE = 1,\n          RGBE_VALID_FORMAT = 2,\n          RGBE_VALID_DIMENSIONS = 4,\n          NEWLINE = '\\n',\n          fgets = function fgets(buffer, lineLimit, consume) {\n        var chunkSize = 128;\n        lineLimit = !lineLimit ? 1024 : lineLimit;\n        var p = buffer.pos,\n            i = -1,\n            len = 0,\n            s = '',\n            chunk = String.fromCharCode.apply(null, new Uint16Array(buffer.subarray(p, p + chunkSize)));\n\n        while (0 > (i = chunk.indexOf(NEWLINE)) && len < lineLimit && p < buffer.byteLength) {\n          s += chunk;\n          len += chunk.length;\n          p += chunkSize;\n          chunk += String.fromCharCode.apply(null, new Uint16Array(buffer.subarray(p, p + chunkSize)));\n        }\n\n        if (-1 < i) {\n          /*for (i=l-1; i>=0; i--) {\n          byteCode = m.charCodeAt(i);\n          if (byteCode > 0x7f && byteCode <= 0x7ff) byteLen++;\n          else if (byteCode > 0x7ff && byteCode <= 0xffff) byteLen += 2;\n          if (byteCode >= 0xDC00 && byteCode <= 0xDFFF) i--; //trail surrogate\n          }*/\n          if (false !== consume) buffer.pos += len + i + 1;\n          return s + chunk.slice(0, i);\n        }\n\n        return false;\n      },\n\n      /* minimal header reading.  modify if you want to parse more information */\n      RGBE_ReadHeader = function RGBE_ReadHeader(buffer) {\n        // regexes to parse header info fields\n        var magic_token_re = /^#\\?(\\S+)/,\n            gamma_re = /^\\s*GAMMA\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n            exposure_re = /^\\s*EXPOSURE\\s*=\\s*(\\d+(\\.\\d+)?)\\s*$/,\n            format_re = /^\\s*FORMAT=(\\S+)\\s*$/,\n            dimensions_re = /^\\s*\\-Y\\s+(\\d+)\\s+\\+X\\s+(\\d+)\\s*$/,\n            // RGBE format header struct\n        header = {\n          valid: 0\n          /* indicate which fields are valid */\n          ,\n          string: ''\n          /* the actual header string */\n          ,\n          comments: ''\n          /* comments found in header */\n          ,\n          programtype: 'RGBE'\n          /* listed at beginning of file to identify it after \"#?\". defaults to \"RGBE\" */\n          ,\n          format: ''\n          /* RGBE format, default 32-bit_rle_rgbe */\n          ,\n          gamma: 1.0\n          /* image has already been gamma corrected with given gamma. defaults to 1.0 (no correction) */\n          ,\n          exposure: 1.0\n          /* a value of 1.0 in an image corresponds to <exposure> watts/steradian/m^2. defaults to 1.0 */\n          ,\n          width: 0,\n          height: 0\n          /* image dimensions, width/height */\n\n        };\n        var line, match;\n\n        if (buffer.pos >= buffer.byteLength || !(line = fgets(buffer))) {\n          return rgbe_error(rgbe_read_error, 'no header found');\n        }\n        /* if you want to require the magic token then uncomment the next line */\n\n\n        if (!(match = line.match(magic_token_re))) {\n          return rgbe_error(rgbe_format_error, 'bad initial token');\n        }\n\n        header.valid |= RGBE_VALID_PROGRAMTYPE;\n        header.programtype = match[1];\n        header.string += line + '\\n';\n\n        while (true) {\n          line = fgets(buffer);\n          if (false === line) break;\n          header.string += line + '\\n';\n\n          if ('#' === line.charAt(0)) {\n            header.comments += line + '\\n';\n            continue; // comment line\n          }\n\n          if (match = line.match(gamma_re)) {\n            header.gamma = parseFloat(match[1], 10);\n          }\n\n          if (match = line.match(exposure_re)) {\n            header.exposure = parseFloat(match[1], 10);\n          }\n\n          if (match = line.match(format_re)) {\n            header.valid |= RGBE_VALID_FORMAT;\n            header.format = match[1]; //'32-bit_rle_rgbe';\n          }\n\n          if (match = line.match(dimensions_re)) {\n            header.valid |= RGBE_VALID_DIMENSIONS;\n            header.height = parseInt(match[1], 10);\n            header.width = parseInt(match[2], 10);\n          }\n\n          if (header.valid & RGBE_VALID_FORMAT && header.valid & RGBE_VALID_DIMENSIONS) break;\n        }\n\n        if (!(header.valid & RGBE_VALID_FORMAT)) {\n          return rgbe_error(rgbe_format_error, 'missing format specifier');\n        }\n\n        if (!(header.valid & RGBE_VALID_DIMENSIONS)) {\n          return rgbe_error(rgbe_format_error, 'missing image size specifier');\n        }\n\n        return header;\n      },\n          RGBE_ReadPixels_RLE = function RGBE_ReadPixels_RLE(buffer, w, h) {\n        var scanline_width = w;\n\n        if ( // run length encoding is not allowed so read flat\n        scanline_width < 8 || scanline_width > 0x7fff || // this file is not run length encoded\n        2 !== buffer[0] || 2 !== buffer[1] || buffer[2] & 0x80) {\n          // return the flat buffer\n          return new Uint8Array(buffer);\n        }\n\n        if (scanline_width !== (buffer[2] << 8 | buffer[3])) {\n          return rgbe_error(rgbe_format_error, 'wrong scanline width');\n        }\n\n        var data_rgba = new Uint8Array(4 * w * h);\n\n        if (!data_rgba.length) {\n          return rgbe_error(rgbe_memory_error, 'unable to allocate buffer space');\n        }\n\n        var offset = 0,\n            pos = 0;\n        var ptr_end = 4 * scanline_width;\n        var rgbeStart = new Uint8Array(4);\n        var scanline_buffer = new Uint8Array(ptr_end);\n        var num_scanlines = h; // read in each successive scanline\n\n        while (num_scanlines > 0 && pos < buffer.byteLength) {\n          if (pos + 4 > buffer.byteLength) {\n            return rgbe_error(rgbe_read_error);\n          }\n\n          rgbeStart[0] = buffer[pos++];\n          rgbeStart[1] = buffer[pos++];\n          rgbeStart[2] = buffer[pos++];\n          rgbeStart[3] = buffer[pos++];\n\n          if (2 != rgbeStart[0] || 2 != rgbeStart[1] || (rgbeStart[2] << 8 | rgbeStart[3]) != scanline_width) {\n            return rgbe_error(rgbe_format_error, 'bad rgbe scanline format');\n          } // read each of the four channels for the scanline into the buffer\n          // first red, then green, then blue, then exponent\n\n\n          var ptr = 0,\n              count = void 0;\n\n          while (ptr < ptr_end && pos < buffer.byteLength) {\n            count = buffer[pos++];\n            var isEncodedRun = count > 128;\n            if (isEncodedRun) count -= 128;\n\n            if (0 === count || ptr + count > ptr_end) {\n              return rgbe_error(rgbe_format_error, 'bad scanline data');\n            }\n\n            if (isEncodedRun) {\n              // a (encoded) run of the same value\n              var byteValue = buffer[pos++];\n\n              for (var i = 0; i < count; i++) {\n                scanline_buffer[ptr++] = byteValue;\n              } //ptr += count;\n\n            } else {\n              // a literal-run\n              scanline_buffer.set(buffer.subarray(pos, pos + count), ptr);\n              ptr += count;\n              pos += count;\n            }\n          } // now convert data from buffer into rgba\n          // first red, then green, then blue, then exponent (alpha)\n\n\n          var l = scanline_width; //scanline_buffer.byteLength;\n\n          for (var _i = 0; _i < l; _i++) {\n            var off = 0;\n            data_rgba[offset] = scanline_buffer[_i + off];\n            off += scanline_width; //1;\n\n            data_rgba[offset + 1] = scanline_buffer[_i + off];\n            off += scanline_width; //1;\n\n            data_rgba[offset + 2] = scanline_buffer[_i + off];\n            off += scanline_width; //1;\n\n            data_rgba[offset + 3] = scanline_buffer[_i + off];\n            offset += 4;\n          }\n\n          num_scanlines--;\n        }\n\n        return data_rgba;\n      };\n\n      var RGBEByteToRGBFloat = function RGBEByteToRGBFloat(sourceArray, sourceOffset, destArray, destOffset) {\n        var e = sourceArray[sourceOffset + 3];\n        var scale = Math.pow(2.0, e - 128.0) / 255.0;\n        destArray[destOffset + 0] = sourceArray[sourceOffset + 0] * scale;\n        destArray[destOffset + 1] = sourceArray[sourceOffset + 1] * scale;\n        destArray[destOffset + 2] = sourceArray[sourceOffset + 2] * scale;\n      };\n\n      var RGBEByteToRGBHalf = function RGBEByteToRGBHalf(sourceArray, sourceOffset, destArray, destOffset) {\n        var e = sourceArray[sourceOffset + 3];\n        var scale = Math.pow(2.0, e - 128.0) / 255.0;\n        destArray[destOffset + 0] = DataUtils.toHalfFloat(sourceArray[sourceOffset + 0] * scale);\n        destArray[destOffset + 1] = DataUtils.toHalfFloat(sourceArray[sourceOffset + 1] * scale);\n        destArray[destOffset + 2] = DataUtils.toHalfFloat(sourceArray[sourceOffset + 2] * scale);\n      };\n\n      var byteArray = new Uint8Array(buffer);\n      byteArray.pos = 0;\n      var rgbe_header_info = RGBE_ReadHeader(byteArray);\n\n      if (RGBE_RETURN_FAILURE !== rgbe_header_info) {\n        var w = rgbe_header_info.width,\n            h = rgbe_header_info.height,\n            image_rgba_data = RGBE_ReadPixels_RLE(byteArray.subarray(byteArray.pos), w, h);\n\n        if (RGBE_RETURN_FAILURE !== image_rgba_data) {\n          var data, format, type;\n          var numElements;\n\n          switch (this.type) {\n            case UnsignedByteType:\n              data = image_rgba_data;\n              format = RGBEFormat; // handled as THREE.RGBAFormat in shaders\n\n              type = UnsignedByteType;\n              break;\n\n            case FloatType:\n              numElements = image_rgba_data.length / 4 * 3;\n              var floatArray = new Float32Array(numElements);\n\n              for (var j = 0; j < numElements; j++) {\n                RGBEByteToRGBFloat(image_rgba_data, j * 4, floatArray, j * 3);\n              }\n\n              data = floatArray;\n              format = RGBFormat;\n              type = FloatType;\n              break;\n\n            case HalfFloatType:\n              numElements = image_rgba_data.length / 4 * 3;\n              var halfArray = new Uint16Array(numElements);\n\n              for (var _j = 0; _j < numElements; _j++) {\n                RGBEByteToRGBHalf(image_rgba_data, _j * 4, halfArray, _j * 3);\n              }\n\n              data = halfArray;\n              format = RGBFormat;\n              type = HalfFloatType;\n              break;\n\n            default:\n              console.error('THREE.RGBELoader: unsupported type: ', this.type);\n              break;\n          }\n\n          return {\n            width: w,\n            height: h,\n            data: data,\n            header: rgbe_header_info.string,\n            gamma: rgbe_header_info.gamma,\n            exposure: rgbe_header_info.exposure,\n            format: format,\n            type: type\n          };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"setDataType\",\n    value: function setDataType(value) {\n      this.type = value;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      function onLoadCallback(texture, texData) {\n        switch (texture.type) {\n          case UnsignedByteType:\n            texture.encoding = RGBEEncoding;\n            texture.minFilter = NearestFilter;\n            texture.magFilter = NearestFilter;\n            texture.generateMipmaps = false;\n            texture.flipY = true;\n            break;\n\n          case FloatType:\n            texture.encoding = LinearEncoding;\n            texture.minFilter = LinearFilter;\n            texture.magFilter = LinearFilter;\n            texture.generateMipmaps = false;\n            texture.flipY = true;\n            break;\n\n          case HalfFloatType:\n            texture.encoding = LinearEncoding;\n            texture.minFilter = LinearFilter;\n            texture.magFilter = LinearFilter;\n            texture.generateMipmaps = false;\n            texture.flipY = true;\n            break;\n        }\n\n        if (onLoad) onLoad(texture, texData);\n      }\n\n      return _get(_getPrototypeOf(RGBELoader.prototype), \"load\", this).call(this, url, onLoadCallback, onProgress, onError);\n    }\n  }]);\n\n  return RGBELoader;\n}(DataTextureLoader);\n\nexport { RGBELoader };","var presetsObj = {\n  sunset: 'venice_sunset_1k.hdr',\n  dawn: 'kiara_1_dawn_1k.hdr',\n  night: 'dikhololo_night_1k.hdr',\n  warehouse: 'empty_warehouse_01_1k.hdr',\n  forest: 'forest_slope_1k.hdr',\n  apartment: 'lebombo_1k.hdr',\n  studio: 'studio_small_03_1k.hdr',\n  city: 'potsdamer_platz_1k.hdr',\n  park: 'rooitou_park_1k.hdr',\n  lobby: 'st_fagans_interior_1k.hdr'\n};\nexport { presetsObj };","import * as React from 'react';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { PMREMGenerator, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { useAsset } from 'use-asset';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nfunction getTexture(texture, gen, isCubeMap) {\n  if (isCubeMap) {\n    gen.compileEquirectangularShader();\n    return gen.fromCubemap(texture).texture;\n  }\n\n  return gen.fromEquirectangular(texture).texture;\n}\n\nvar CUBEMAP_ROOT = 'https://rawcdn.githack.com/pmndrs/drei-assets/aa3600359ba664d546d05821bcbca42013587df2';\n\nfunction Environment(_ref) {\n  var _ref$background = _ref.background,\n      background = _ref$background === void 0 ? false : _ref$background,\n      _ref$files = _ref.files,\n      files = _ref$files === void 0 ? ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'] : _ref$files,\n      _ref$path = _ref.path,\n      path = _ref$path === void 0 ? '' : _ref$path,\n      _ref$preset = _ref.preset,\n      preset = _ref$preset === void 0 ? undefined : _ref$preset,\n      scene = _ref.scene,\n      extensions = _ref.extensions;\n\n  if (preset) {\n    if (!(preset in presetsObj)) {\n      throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    }\n\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT + '/hdri/';\n  }\n\n  var defaultScene = useThree(function (_ref2) {\n    var scene = _ref2.scene;\n    return scene;\n  });\n  var gl = useThree(function (_ref3) {\n    var gl = _ref3.gl;\n    return gl;\n  });\n  var isCubeMap = Array.isArray(files);\n  var loader = isCubeMap ? CubeTextureLoader : RGBELoader; // @ts-expect-error\n\n  var loaderResult = useLoader(loader, isCubeMap ? [files] : files, function (loader) {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  var map = isCubeMap ? loaderResult[0] : loaderResult; // PMREMGenerator takes its sweet time to generate the env-map,\n  // Let's make this part of suspense, or else it just yields a frame-skip\n\n  var texture = useAsset(function () {\n    return new Promise(function (res) {\n      var gen = new PMREMGenerator(gl);\n      var texture = getTexture(map, gen, isCubeMap);\n      gen.dispose();\n      res(texture);\n    });\n  }, map);\n  React.useLayoutEffect(function () {\n    var oldbg = scene ? scene.background : defaultScene.background;\n    var oldenv = scene ? scene.environment : defaultScene.environment;\n\n    if (scene) {\n      scene.environment = texture;\n      if (background) scene.background = texture;\n    } else {\n      defaultScene.environment = texture;\n      if (background) defaultScene.background = texture;\n    }\n\n    return function () {\n      if (scene) {\n        scene.environment = oldenv;\n        scene.background = oldbg;\n      } else {\n        defaultScene.environment = oldenv;\n        defaultScene.background = oldbg;\n      } // Environment textures are volatile, better dispose and uncache them\n\n\n      useAsset.clear(map);\n      texture.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [texture, background, scene]);\n  return null;\n}\n\nexport { Environment };","import React, { Suspense, useRef } from \"react\"\r\nimport { Canvas } from \"@react-three/fiber\"\r\nimport Model from \"./Second\"\r\nimport Overlay from \"./Overlay\"\r\nimport \"./Show.css\"\r\nimport { Environment } from \"@react-three/drei\"\r\n\r\nconst Lights = () => {\r\n  const lights = useRef()\r\n  return (\r\n    <>\r\n      <directionalLight\r\n        intensity={1}\r\n        position={[2, 2, 0]}\r\n        color=\"red\"\r\n        distance={5}\r\n      />\r\n      <spotLight\r\n        intensity={1.5}\r\n        position={[-5, 10, 2]}\r\n        angle={0.7}\r\n        penumbra={1}\r\n        shadow-mapSize={[2048, 2048]}\r\n      />\r\n      <group ref={lights}>\r\n        <rectAreaLight\r\n          intensity={2}\r\n          position={[4.5, 0, -3]}\r\n          width={10}\r\n          height={10}\r\n        />\r\n        <rectAreaLight\r\n          intensity={2}\r\n          position={[-10, 2, -10]}\r\n          width={15}\r\n          height={15}\r\n        />\r\n      </group>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Show = () => {\r\n  const scroll = useRef(0)\r\n  const overlay = useRef()\r\n  const caption = useRef()\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        onCreated={state => state.events.connect(overlay.current)}\r\n        raycaster={{\r\n          computeOffsets: ({ clientX, clientY }) => ({\r\n            offsetX: clientX,\r\n            offsetY: clientY,\r\n          }),\r\n        }}\r\n      >\r\n        <Lights />\r\n        <Suspense fallback={null}>\r\n          <Environment path=\"/cube\" />\r\n            <Model scroll={scroll} />\r\n        </Suspense>\r\n      </Canvas>\r\n      <Overlay ref={overlay} caption={caption} scroll={scroll} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Show\r\n","import * as React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Show from \"../Three/Show\"\r\n\r\nconst SecondPage = () => (\r\n  <Layout>\r\n    <Seo title=\"Page two\" />\r\n    <Show/>\r\n  </Layout>\r\n)\r\n\r\nexport default SecondPage\r\n"],"names":["Model","scroll","props","group","useRef","useGLTF","nodes","materials","animations","actions","useAnimations","useEffect","play","paused","useFrame","state","time","THREE","getClip","duration","current","ref","dispose","name","position","rotation","PerspectiveCamera","makeDefault","far","near","fov","Math","PI","geometry","shirt","material","belt","body","Cylinder002","Cylinder002_1","sharingan_button","body001","body002","body003","between_chest","chest","Plane003","shoulder_","shoulder_001","shoulder_002","shoulder_003","NurbsPath035","NurbsPath035_1","cable002","butt_stripe1","knee_guard003","Cube001","Cube001_1","glass","Cube001_2","new_helmet002","new_helmet003","new_helmet004","knife001","emarald","scale","Cube","eye","handle","metal","head","tooth","Torus","forearm","shoe","Plane014","Plane014_1","shoe004","shoe006","shoe002","shoe003","shoe005","shoe007","forwardRef","caption","onScroll","e","target","scrollTop","scrollHeight","window","innerHeight","innerText","toFixed","class","style","height","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","RGBELoader","_DataTextureLoader","_super","manager","_this","type","UnsignedByteType","key","value","buffer","rgbe_error","rgbe_error_code","msg","console","error","fgets","lineLimit","consume","p","pos","i","len","s","chunk","String","fromCharCode","Uint16Array","subarray","indexOf","byteLength","length","slice","RGBEByteToRGBHalf","sourceArray","sourceOffset","destArray","destOffset","pow","DataUtils","byteArray","Uint8Array","rgbe_header_info","line","match","gamma_re","exposure_re","format_re","dimensions_re","header","valid","string","comments","programtype","format","gamma","exposure","width","charAt","parseFloat","parseInt","RGBE_ReadHeader","w","h","image_rgba_data","scanline_width","data_rgba","offset","ptr_end","rgbeStart","scanline_buffer","num_scanlines","ptr","count","isEncodedRun","byteValue","set","l","_i","off","RGBE_ReadPixels_RLE","data","numElements","RGBEFormat","FloatType","floatArray","Float32Array","j","RGBFormat","HalfFloatType","halfArray","_j","url","onLoad","onProgress","onError","texture","texData","encoding","RGBEEncoding","minFilter","NearestFilter","magFilter","generateMipmaps","flipY","LinearEncoding","LinearFilter","DataTextureLoader","presetsObj","sunset","dawn","night","warehouse","forest","apartment","studio","city","park","lobby","Environment","_ref","_ref$background","background","_ref$files","files","_ref$path","path","_ref$preset","preset","undefined","scene","extensions","Error","Object","keys","join","CUBEMAP_ROOT","defaultScene","_ref2","gl","_ref3","isCubeMap","Array","isArray","loader","CubeTextureLoader","loaderResult","setPath","map","Promise","res","gen","PMREMGenerator","compileEquirectangularShader","fromCubemap","fromEquirectangular","getTexture","oldbg","oldenv","environment","Lights","lights","intensity","color","distance","angle","penumbra","overlay","onCreated","events","connect","raycaster","computeOffsets","offsetX","clientX","offsetY","clientY","Suspense","fallback","title"],"sourceRoot":""}